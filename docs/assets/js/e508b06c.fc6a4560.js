"use strict";(self.webpackChunk_canvas_ui_docs=self.webpackChunk_canvas_ui_docs||[]).push([[170],{3237:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(4349);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},8542:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"containers/view","title":"View","description":"View is the fundamental container component in Canvas UI. It provides a basic container without automatic layout capabilities, requiring child elements to use absolute positioning to specify their coordinates.","source":"@site/docs/containers/view.md","sourceDirName":"containers","slug":"/containers/view","permalink":"/canvas-ui/containers/view","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/containers/view.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"docsSidebar","previous":{"title":"Canvas","permalink":"/canvas-ui/containers/canvas"},"next":{"title":"Flex","permalink":"/canvas-ui/containers/flex"}}');var t=i(4489),r=i(3237);const l={sidebar_position:2},o="View",d={},c=[{value:"Overview",id:"overview",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Props",id:"props",level:2},{value:"Inherited Props",id:"inherited-props",level:3},{value:"Key Features",id:"key-features",level:2},{value:"\ud83c\udfaf <strong>Absolute Positioning Control</strong>",id:"-absolute-positioning-control",level:3},{value:"\ud83c\udfa8 <strong>Full Styling Support</strong>",id:"-full-styling-support",level:3},{value:"\u26a1 <strong>High Performance</strong>",id:"-high-performance",level:3},{value:"\ud83d\uddb1\ufe0f <strong>Complete Event Handling</strong>",id:"\ufe0f-complete-event-handling",level:3},{value:"Positioning Examples",id:"positioning-examples",level:2},{value:"Complex Layout",id:"complex-layout",level:3},{value:"Interactive Examples",id:"interactive-examples",level:2},{value:"Clickable Areas",id:"clickable-areas",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"\u2705 Do&#39;s",id:"-dos",level:3},{value:"\u274c Don&#39;ts",id:"-donts",level:3},{value:"\ud83c\udfaf Performance Tips",id:"-performance-tips",level:3},{value:"When to Use View",id:"when-to-use-view",level:2},{value:"Comparison with Other Containers",id:"comparison-with-other-containers",level:2},{value:"View vs Flex",id:"view-vs-flex",level:3},{value:"View vs Chunk",id:"view-vs-chunk",level:3},{value:"View vs Canvas",id:"view-vs-canvas",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"view",children:"View"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"View"})," is the fundamental container component in Canvas UI. It provides a basic container without automatic layout capabilities, requiring child elements to use absolute positioning to specify their coordinates."]}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"View"})," component serves as the foundation for building custom layouts and containers in Canvas UI. Unlike ",(0,t.jsx)(n.code,{children:"Flex"})," which provides automatic layout, ",(0,t.jsx)(n.code,{children:"View"})," gives you complete control over the positioning of child elements through absolute positioning."]}),"\n",(0,t.jsx)(n.p,{children:"Key characteristics:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No Automatic Layout"}),": Child elements must specify their own positions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Absolute Positioning"}),": Children use ",(0,t.jsx)(n.code,{children:"top"}),", ",(0,t.jsx)(n.code,{children:"left"}),", ",(0,t.jsx)(n.code,{children:"width"}),", and ",(0,t.jsx)(n.code,{children:"height"})," properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Full Styling Support"}),": Supports all Canvas UI styling properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Handling"}),": Provides complete event handling capabilities"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance Optimized"}),": Minimal overhead for maximum performance"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:"function BasicViewExample() {\n  const { Canvas, View, Text } = importCanvasUIPackages()\n\n  return (\n    <div style={{ height: '200px', border: '1px solid #ddd' }}>\n      <Canvas>\n        <View style={{ width: 300, height: 180, backgroundColor: '#f5f5f5', padding: 10 }}>\n          <Text\n            style={{\n              top: 20,\n              left: 20,\n              fontSize: 16,\n              color: '#333'\n            }}\n            text=\"Top Left Text\"\n          />\n          <Text\n            style={{\n              top: 20,\n              right: 20,\n              fontSize: 16,\n              color: '#2196f3'\n            }}\n            text=\"Top Right Text\"\n          />\n          <Text\n            style={{\n              bottom: 20,\n              left: 20,\n              fontSize: 14,\n              color: '#666'\n            }}\n            text=\"Bottom Left Text\"\n          />\n          <Text\n            style={{\n              bottom: 20,\n              right: 20,\n              fontSize: 14,\n              color: '#4caf50'\n            }}\n            text=\"Bottom Right Text\"\n          />\n        </View>\n      </Canvas>\n    </div>\n  )\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,t.jsx)(n.h3,{id:"inherited-props",children:"Inherited Props"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"View"})," inherits all standard Canvas UI component props:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"style"})})," - CSS-like styling properties"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"children"})})," - Child components to render inside the view"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"id"})})," - Component identifier for debugging"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event handlers"})," - ",(0,t.jsx)(n.code,{children:"onPointerDown"}),", ",(0,t.jsx)(n.code,{children:"onPointerMove"}),", ",(0,t.jsx)(n.code,{children:"onPointerOver"}),", etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"hidden"})})," - Whether the component is hidden"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"hitTestDisabled"})})," - Whether hit testing is disabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"repaintBoundary"})})," - Whether the component acts as a repaint boundary"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsxs)(n.h3,{id:"-absolute-positioning-control",children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Absolute Positioning Control"})]}),"\n",(0,t.jsx)(n.p,{children:"Complete control over child element positioning:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"top"}),", ",(0,t.jsx)(n.code,{children:"left"}),", ",(0,t.jsx)(n.code,{children:"bottom"}),", ",(0,t.jsx)(n.code,{children:"right"})," for positioning"]}),"\n",(0,t.jsxs)(n.li,{children:["Specify ",(0,t.jsx)(n.code,{children:"width"})," and ",(0,t.jsx)(n.code,{children:"height"})," for sizing"]}),"\n",(0,t.jsxs)(n.li,{children:["Stack elements using ",(0,t.jsx)(n.code,{children:"zIndex"})]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-full-styling-support",children:["\ud83c\udfa8 ",(0,t.jsx)(n.strong,{children:"Full Styling Support"})]}),"\n",(0,t.jsx)(n.p,{children:"Supports all Canvas UI styling properties:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Background colors and images"}),"\n",(0,t.jsx)(n.li,{children:"Borders and border radius"}),"\n",(0,t.jsx)(n.li,{children:"Padding and margins"}),"\n",(0,t.jsx)(n.li,{children:"Box shadows and effects"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"-high-performance",children:["\u26a1 ",(0,t.jsx)(n.strong,{children:"High Performance"})]}),"\n",(0,t.jsx)(n.p,{children:"Optimized for performance:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Minimal layout overhead"}),"\n",(0,t.jsx)(n.li,{children:"Efficient rendering pipeline"}),"\n",(0,t.jsx)(n.li,{children:"Optional repaint boundaries"}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"\ufe0f-complete-event-handling",children:["\ud83d\uddb1\ufe0f ",(0,t.jsx)(n.strong,{children:"Complete Event Handling"})]}),"\n",(0,t.jsx)(n.p,{children:"Full event handling capabilities:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Pointer events (click, hover, etc.)"}),"\n",(0,t.jsx)(n.li,{children:"Keyboard events"}),"\n",(0,t.jsx)(n.li,{children:"Custom event propagation"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"positioning-examples",children:"Positioning Examples"}),"\n",(0,t.jsx)(n.h3,{id:"complex-layout",children:"Complex Layout"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:"function ComplexLayoutExample() {\n  const { Canvas, View, Text } = importCanvasUIPackages()\n\n  return (\n    <div style={{ height: '250px', border: '1px solid #ddd' }}>\n      <Canvas>\n        <View style={{ width: 400, height: 230, backgroundColor: '#fafafa', padding: 10 }}>\n          {/* Header */}\n          <View\n            style={{\n              top: 0,\n              left: 0,\n              right: 0,\n              height: 50,\n              backgroundColor: '#2196f3',\n              borderRadius: 4\n            }}\n          >\n            <Text\n              style={{\n                top: 15,\n                left: 15,\n                fontSize: 16,\n                color: 'white',\n                fontWeight: 'bold'\n              }}\n              text=\"Header\"\n            />\n          </View>\n\n          {/* Sidebar */}\n          <View\n            style={{\n              top: 60,\n              left: 0,\n              width: 100,\n              bottom: 0,\n              backgroundColor: '#e3f2fd',\n              borderRadius: 4\n            }}\n          >\n            <Text\n              style={{\n                top: 10,\n                left: 10,\n                fontSize: 12,\n                color: '#1976d2'\n              }}\n              text=\"Sidebar\"\n            />\n          </View>\n\n          {/* Main Content */}\n          <View\n            style={{\n              top: 60,\n              left: 110,\n              right: 0,\n              bottom: 0,\n              backgroundColor: 'white',\n              borderRadius: 4,\n              borderWidth: 1,\n              borderColor: '#ddd'\n            }}\n          >\n            <Text\n              style={{\n                top: 20,\n                left: 20,\n                fontSize: 14,\n                color: '#333'\n              }}\n              text=\"Main Content Area\"\n            />\n            <Text\n              style={{\n                top: 45,\n                left: 20,\n                fontSize: 12,\n                color: '#666'\n              }}\n              text=\"This is a complex layout using absolute positioning\"\n            />\n          </View>\n        </View>\n      </Canvas>\n    </div>\n  )\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"interactive-examples",children:"Interactive Examples"}),"\n",(0,t.jsx)(n.h3,{id:"clickable-areas",children:"Clickable Areas"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"live",live:!0,children:"function InteractiveViewExample() {\n  const { Canvas, View, Text } = importCanvasUIPackages()\n\n  const [selectedArea, setSelectedArea] = useState('none')\n\n  const areas = [\n    { id: 'area1', color: '#e3f2fd', label: 'Area 1', top: 20, left: 20 },\n    { id: 'area2', color: '#f3e5f5', label: 'Area 2', top: 20, left: 140 },\n    { id: 'area3', color: '#e8f5e8', label: 'Area 3', top: 90, left: 20 },\n    { id: 'area4', color: '#fff3e0', label: 'Area 4', top: 90, left: 140 }\n  ]\n\n  return (\n    <div style={{ height: '200px', border: '1px solid #ddd' }}>\n      <Canvas>\n        <View style={{ width: 300, height: 180, backgroundColor: '#fafafa' }}>\n          {areas.map((area) => (\n            <View\n              key={area.id}\n              style={{\n                top: area.top,\n                left: area.left,\n                width: 100,\n                height: 60,\n                backgroundColor: selectedArea === area.id ? '#2196f3' : area.color,\n                borderRadius: 4,\n                cursor: 'pointer',\n                borderWidth: selectedArea === area.id ? 2 : 1,\n                borderColor: selectedArea === area.id ? '#1976d2' : '#ddd'\n              }}\n              onPointerDown={() => setSelectedArea(area.id)}\n            >\n              <Text\n                style={{\n                  top: 20,\n                  left: 10,\n                  fontSize: 12,\n                  color: selectedArea === area.id ? 'white' : '#333',\n                  fontWeight: selectedArea === area.id ? 'bold' : 'normal'\n                }}\n                text={area.label}\n              />\n            </View>\n          ))}\n          <Text\n            style={{\n              bottom: 10,\n              left: 10,\n              fontSize: 10,\n              color: '#666'\n            }}\n            text={`Selected: ${selectedArea}`}\n          />\n        </View>\n      </Canvas>\n    </div>\n  )\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"-dos",children:"\u2705 Do's"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"View"})," when you need precise control over element positioning"]}),"\n",(0,t.jsxs)(n.li,{children:["Specify explicit dimensions (",(0,t.jsx)(n.code,{children:"width"}),", ",(0,t.jsx)(n.code,{children:"height"}),") for child elements"]}),"\n",(0,t.jsxs)(n.li,{children:["Leverage absolute positioning properties (",(0,t.jsx)(n.code,{children:"top"}),", ",(0,t.jsx)(n.code,{children:"left"}),", ",(0,t.jsx)(n.code,{children:"bottom"}),", ",(0,t.jsx)(n.code,{children:"right"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"View"})," as a foundation for custom layout components"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-donts",children:"\u274c Don'ts"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Don't use ",(0,t.jsx)(n.code,{children:"View"})," when ",(0,t.jsx)(n.code,{children:"Flex"})," would be more appropriate for automatic layouts"]}),"\n",(0,t.jsx)(n.li,{children:"Don't forget to set dimensions for child elements"}),"\n",(0,t.jsx)(n.li,{children:"Don't rely on default positioning - always specify positions explicitly"}),"\n",(0,t.jsx)(n.li,{children:"Don't create overly complex nesting when simpler solutions exist"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"-performance-tips",children:"\ud83c\udfaf Performance Tips"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Repaint Boundaries"}),": Use ",(0,t.jsx)(n.code,{children:"repaintBoundary={true}"})," for independent update areas"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Minimal Nesting"}),": Keep view hierarchy shallow when possible"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Static Positioning"}),": Prefer static layouts over dynamic repositioning"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Event Optimization"}),": Use ",(0,t.jsx)(n.code,{children:"hitTestDisabled={true}"})," for non-interactive elements"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"when-to-use-view",children:"When to Use View"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Scenario"}),(0,t.jsx)(n.th,{children:"Use View"}),(0,t.jsx)(n.th,{children:"Use Flex"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Precise positioning needed"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"\u274c"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Overlapping elements"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"\u274c"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Custom layout systems"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"\u274c"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Simple automatic layouts"}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"\u2705"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Responsive designs"}),(0,t.jsx)(n.td,{children:"\u274c"}),(0,t.jsx)(n.td,{children:"\u2705"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Game UI positioning"}),(0,t.jsx)(n.td,{children:"\u2705"}),(0,t.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"comparison-with-other-containers",children:"Comparison with Other Containers"}),"\n",(0,t.jsx)(n.h3,{id:"view-vs-flex",children:"View vs Flex"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"View"}),": Manual positioning, complete control, no automatic layout"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Flex"}),": Automatic layout, responsive, CSS Flexbox-like behavior"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"view-vs-chunk",children:"View vs Chunk"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"View"}),": General-purpose container, any number of children"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chunk"}),": Performance-optimized for large lists, chunking and culling"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"view-vs-canvas",children:"View vs Canvas"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"View"}),": Container component, rendered within Canvas"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Canvas"}),": Root component, bridges to HTML Canvas element"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"View"})," component provides the foundation for building custom layouts in Canvas UI, offering maximum flexibility and control over element positioning."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);